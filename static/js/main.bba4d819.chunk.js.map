{"version":3,"sources":["index.js"],"names":["App","props","onChangeYourAddr","e","setState","yourAddr","target","value","onChangeTransferGolds","transferGolds","state","yourGolds","yourTotalGolds","tronWeb","TronWeb","fullHost","headers","privateKey","myAddr","tronGrid","TronGrid","a","this","account","get","getTransactions","only_confirmed","only_to","order_by","resultReceived","only_from","resultSent","hexYourAddr","address","toHex","console","log","resultReceived1","receivedGolds","i","data","length","ret","contractRet","j","raw_data","contract","parameter","owner_address","push","amount","resultSent1","sentGolds","to_address","JSON","stringify","totalGolds","alert","parseInt","transactionBuilder","sendTrx","tx","trx","sign","signedTx","sendRawTransaction","broastTx","type","id","name","onChange","onClick","onAddrApplyButton","className","send","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bba4d819.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import MessageDuplex from './MessageDuplex';\r\nimport TronWeb from 'tronweb';\r\nimport TronGrid from 'trongrid';\r\nimport './index.css';\r\n\r\n\r\nclass App extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      yourAddr: '',\r\n      yourGolds: 0,\r\n      transferGolds: 0,\r\n      yourTotalGolds: 0,\r\n    };\r\n\r\n    this.tronWeb = new TronWeb({\r\n      fullHost: 'https://api.trongrid.io',\r\n      headers: { \"TRON-PRO-API-KEY\": \"c0c4ce45-99be-4f35-862a-36486a502fb1\" },\r\n      //privateKey: \"e9630d7bf62638402c787071a45a53023d29b019d72e9be2a004b0acf1d0c641\"    //집 크롬\r\n      //privateKey: \"c00fdf2f1ce9a3e7e3d40ef9141012fb45b7c2b082e1e5d7be736327d985d38c\"    //사무실 크롬\r\n      privateKey: \"454b80de86b33ecfa3da68daa113b8f46a0210d1ea4cad34c69a5e36a345a74c\"      //핸드폰 TronLink Pro\r\n    });\r\n\r\n    //this.myAddr = \"TUDL42G3KMMjDiusLXSRSo8Qht6rSbwRBU\";     //집 크롬\r\n    //this.myAddr = \"TN51tPoGF1CCqiMX1kmshySghWN8U3FntK\";     //사무실 크롬\r\n    this.myAddr = \"TBtrJQwbpnod8dcLtxsjNTX13JafLSP68k\";       //핸드폰 TronLink Pro\r\n\r\n    this.tronGrid = new TronGrid(this.tronWeb);    \r\n  }\r\n\r\n  onChangeYourAddr = (e) => {\r\n    this.setState({\r\n      yourAddr: e.target.value,\r\n    });\r\n  };\r\n\r\n  onChangeTransferGolds = (e) => {\r\n    this.setState({\r\n      transferGolds: e.target.value,\r\n    });\r\n  };\r\n\r\n  async onAddrApplyButton() {\r\n    //alert(\"onAddrApplyButton\");    \r\n\r\n    try {\r\n      await this.tronGrid.account.get(this.myAddr, {});\r\n\r\n      var resultReceived = await this.tronGrid.account.getTransactions(this.myAddr,\r\n      {\r\n        only_confirmed: true,\r\n        only_to: true,      \r\n        //limit: 100,\r\n        order_by: \"timestamp,asc\"\r\n      });    \r\n\r\n      var resultSent = await this.tronGrid.account.getTransactions(this.myAddr,\r\n      {\r\n        only_confirmed: true,\r\n        only_from: true,\r\n        //limit: 100,\r\n        order_by: \"timestamp,asc\"\r\n        });\r\n\r\n      //var hexYourAddr = this.tronWeb.toHex(this.state.yourAddr);\r\n    \r\n      var hexYourAddr = this.tronWeb.address.toHex(this.state.yourAddr);\r\n\r\n      console.log(\"hexYourAddr : \" + hexYourAddr);\r\n\r\n      var resultReceived1 = [];\r\n      var receivedGolds = 0;\r\n\r\n      for (var i = 0; i < resultReceived.data.length; i++) {\r\n        if (resultReceived.data[i].ret[0].contractRet === \"SUCCESS\") {\r\n          for (var j = 0; j < resultReceived.data[i].raw_data.contract.length; j++) {\r\n            var contract = resultReceived.data[i].raw_data.contract[j];\r\n            if (contract.parameter.value.owner_address === hexYourAddr) {\r\n              resultReceived1.push(contract.parameter.value);\r\n\r\n              receivedGolds += contract.parameter.value.amount;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      var resultSent1 = [];\r\n      var sentGolds = 0;\r\n\r\n      for (i = 0; i < resultSent.data.length; i++) {\r\n        if (resultSent.data[i].ret[0].contractRet === \"SUCCESS\") {\r\n          for (j = 0; j < resultSent.data[i].raw_data.contract.length; j++) {\r\n            contract = resultSent.data[i].raw_data.contract[j];\r\n            if (contract.parameter.value.to_address === hexYourAddr) {\r\n              resultSent1.push(contract.parameter.value);\r\n\r\n              sentGolds += contract.parameter.value.amount;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n\r\n      console.log(\"**Received : \" + JSON.stringify(resultReceived));\r\n      console.log(\"--Sent : \" + JSON.stringify(resultSent));\r\n      console.log(\"***Received1 : \" + JSON.stringify(resultReceived1));\r\n      console.log(\"---Sent1 : \" + JSON.stringify(resultSent1));\r\n      console.log(\"receivedGolds : \" + receivedGolds + \" sentGolds : \" + sentGolds + \" totalGolds : \" + (receivedGolds - sentGolds));\r\n\r\n      var totalGolds = (receivedGolds - sentGolds);\r\n\r\n      this.setState({\r\n        yourTotalGolds: totalGolds,\r\n      });\r\n    }\r\n    catch (e) {\r\n      alert(\"입력한 주소가 잘못 되었습니다\");\r\n    }\r\n  }\r\n\r\n  async send() {\r\n    try {\r\n      console.log(\"toAddr:\" + this.state.yourAddr);\r\n      console.log(\"sendAmount:\" + parseInt(this.state.transferGolds));\r\n      var tx = await this.tronWeb.transactionBuilder.sendTrx(this.state.yourAddr, parseInt(this.state.transferGolds), this.myAddr)\r\n      var signedTx = await this.tronWeb.trx.sign(tx)\r\n      var broastTx = await this.tronWeb.trx.sendRawTransaction(signedTx)\r\n      console.log(\"Send Result : \" + broastTx);\r\n\r\n      var totalGolds = this.state.yourTotalGolds - parseInt(this.state.transferGolds);\r\n      this.setState({\r\n        yourTotalGolds: totalGolds,\r\n      });      \r\n\r\n      alert(\"보내기 완료!\");\r\n    }\r\n    catch (e) {\r\n      alert(\"보내기 실패! 오류가 발생했습니다\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>트론 연동 테스트 by 누라임게임즈</h1><br />\r\n        <div>입금 주소 : {this.myAddr}</div><br />\r\n        <div>당신의 트론 주소 입력 : <input type=\"text\" id=\"yourAddr\" name=\"yourAddr\" onChange={this.onChangeYourAddr} ></input><button onClick={() => this.onAddrApplyButton() }>경신</button></div><br />\r\n        <div>당신의 보유 골드 : {this.state.yourTotalGolds} </div><br />\r\n        <div className=\"page\">\r\n          <div>\r\n            <div>골드를 Trx로 환전</div>\r\n            <div>환전할 골드 : <input type=\"text\" id=\"transferGold\" name=\"transferGold\" onChange={this.onChangeTransferGolds}></input><button onClick={() => this.send()}>보내기</button></div><br />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}